The matrix_divided Module:
=======================

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided
    >>> matrix = [[1, 2, 3], [3, 2, 1]]

Now proper functioning:

    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [1.5, 1.0, 0.5]]

    >>> matrix_divided(matrix, float("inf"))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided(matrix, True)
    [[1.0, 2.0, 3.0], [3.0, 2.0, 1.0]]


Now Errors:

    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TyperError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TyperError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 1, 1], [1, 1, 1, 1]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(matrix, 1 , 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given
